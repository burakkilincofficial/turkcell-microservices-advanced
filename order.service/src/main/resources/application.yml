spring:
  application:
      name: order.service
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
  datasource:
    url: "jdbc:postgresql://localhost:5435/order-service"
    username: postgres
    password: test
  kafka:
    bootstrap-servers: localhost:9094
  cloud:
    function:
      definition: outboxPublisherSupplier
    stream:
      bindings:
        outboxPublisherSupplier-out-0:
          destination: order-events
          contentType: application/json
      kafka:
        bindings:
          outboxPublisherSupplier-out-0:
            producer:
              sync: true #ACK gelene kadar send isteÄŸini blokla, ACK oldugunda true yap.
              configuration:
                acks: all
                enable.idempotence: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8003/realms/turkcell-ecommerce-dev
server:
  port: 8081

app:
  outbox:
    poll:
      max-attempts: 10
      interval-ms: 1000
      batch-size: 100

management:
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans